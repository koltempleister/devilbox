
version: '2.3'

services:
  # ------------------------------------------------------------
  # Bind (DNS Server)
  # ------------------------------------------------------------
  bind:
    image: cytopia/bind:0.15
    hostname: bind
    restart: always
    ports:
      - "${HOST_PORT_BIND:-1053}:53/tcp"
      - "${HOST_PORT_BIND:-1053}:53/udp"

    environment:
      ##
      ## Debug?
      ##
      ###
      ### Show all executed commands in each
      ### docker image during docker-compose up?
      ###
      ### 0: Quiet
      ### 1: Verbose
      ### 2: More verbose
      - DEBUG_ENTRYPOINT=${DEBUG_COMPOSE_ENTRYPOINT}

      ##
      ## Bind wildcard/host settings
      ##
      - WILDCARD_DNS=${TLD_SUFFIX:-loc}=127.0.0.1
      # - EXTRA_HOSTS=${EXTRA_HOSTS}

      ##
      ## Forwarding
      ##
      ###
      ### Add comma separated DNS server from which you want to receive DNS
      ### You can also add DNS servers from your LAN (if any are available)
      ###
      - DNS_FORWARDER=${BIND_DNS_RESOLVER:-8.8.8.8,8.8.4.4}

      ##
      ## Security
      ##
      ###
      ### Validate DNSSEC
      ###
      ### Values:
      ###  no:    DNSSEC validation is disabled
      ###  yes:   DNSSEC validation is enabled, but a trust anchor must be manually configured.
      ###  auto:  DNSSEC validation is enabled, and a default trust anchor for root zone is used.
      ###
      - DNSSEC_VALIDATE=${no:-no}

      ##
      ## Time settings
      ##
      ### Leave empty for defaults.
      ### Only change when you know what you are doing.
      ###
      # - TTL_TIME=
      # - REFRESH_TIME=
      # - RETRY_TIME=
      # - EXPIRY_TIME=
      # - MAX_CACHE_TIME=

      ##
      ## Query log
      ##
      ###
      ### Show DNS Queries in Docker logs output?
      ###
      ### 1: Yes
      ### 0: No
      - DOCKER_LOGS=0

    dns:
      - 127.0.0.1

    # MacOS and Windows have this by default, this hack also allows it for Linux
    extra_hosts:
      docker.for.lin.host.internal: 172.16.238.1
      docker.for.lin.localhost: 172.16.238.1

    networks:
      app_net:
        ipv4_address: 172.16.238.100

  # ------------------------------------------------------------
  # MySQL Database
  # ------------------------------------------------------------
  mysql:
    image: devilbox/mysql:${MYSQL_SERVER}-0.7
    hostname: mysql

    environment:
      - MYSQL_ROOT_PASSWORD
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes

    ports:
      # [local-machine:]local-port:docker-port
      - "${HOST_PORT_MYSQL}:3306"

    networks:
      app_net:
        ipv4_address: 172.16.238.12

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount devilbox user-defined cnf files in order
      # to overwrite the MySQL server configuration
      - ${DEVILBOX_PATH}/cfg/${MYSQL_SERVER}:/etc/mysql/docker-default.d:ro

      # Mount MySQL Data directory
      - devilbox-${MYSQL_SERVER}:/var/lib/mysql:rw

    depends_on:
      - bind
      # - php
      # - httpd

  # ------------------------------------------------------------
  # PHP
  # ------------------------------------------------------------
  php:
    image: devilbox/php-fpm:${PHP_SERVER}-work-0.122
    # image: ../images/php-fpm-test-73

    hostname: php

    ##
    ## All .env variables
    ##
    ## Source all variables defined in .env
    ## This also makes any custom variable available in each PHP/HHVM container
    ##
    # env_file:
    #   - ./.env

    environment:
      ##
      ## Debug/Logging
      ##
      - DEBUG_ENTRYPOINT=${DEBUG_COMPOSE_ENTRYPOINT}
      - DEBUG_COMPOSE_ENTRYPOINT
      - DOCKER_LOGS

      ##
      ## Tools
      ##
      - COMPOSER_MEMORY_LIMIT=-1

      ##
      ## UserID and GroupID
      ##
      - NEW_UID
      - NEW_GID

      ##
      ## Adjust timezone
      ##
      - TIMEZONE

      ##
      ## Enable/Disable PHP Modules
      ##
      # - ENABLE_MODULES=${PHP_MODULES_ENABLE}
      - DISABLE_MODULES=${PHP_MODULES_DISABLE}

      ##
      ## Mail-catching
      ##
      ### 0: Disable postfix (do not start it)
      ### 1: Enable/Start postfix
      ### 2: Enable/Start postfix and enable email catch-all
      - ENABLE_MAIL=${PHP_MAIL_CATCH_ALL:-2}

      ##
      ## Enable 127.0.0.1 Port-forwarding
      ##
      - FORWARD_PORTS_TO_LOCALHOST=80:httpd:80,443:httpd:443,3306:mysql:3306,11211:memcd:11211

      ##
      ## MySQL Backups
      ##
      - MYSQL_BACKUP_USER=root
      - MYSQL_BACKUP_PASS=${MYSQL_ROOT_PASSWORD}
      - MYSQL_BACKUP_HOST=mysql

    # dns:
    #   - 172.16.238.100
    dns:
      - php

    # MacOS and Windows have this by default, this hack also allows it for Linux
    extra_hosts:
      docker.for.lin.host.internal: 172.16.238.1
      docker.for.lin.localhost: 172.16.238.1
    #
    networks:
      app_net:
        ipv4_address: 172.16.238.10
    # secrets:
    #   - user_ssh_key
    volumes:
      - ~/.ssh:/root/.ssh
      # - devilbox_test_code:/var/www/default
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount default datadir
      # - ${HOST_PATH_HTTPD_DEFAULT_DATADIR}:/var/www/default:ro

      # Mount custom mass virtual hosting
      - ${HOST_PATH_HTTPD_DEFAULT_DATADIR}:/shared/httpd:rw
      # - devilbox_test_code:/shared/httpd:rw

      # Mount logs
      # - ${DEVILBOX_PATH}/log/php-fpm-${PHP_SERVER}:/var/log/php:rw

      # Mount Mail directory
      # - devilbox-mail:/var/mail:rw

      # Mount DB Backup directory
      # - ${HOST_PATH_BACKUPDIR:-./backups}:/shared/backups:rw

      # Mount devilbox user-defined *.ini files in order
      # to overwrite the default PHP.ini configuration
      - ${DEVILBOX_PATH}/cfg/php-ini-${PHP_SERVER}:/etc/php-custom.d:ro

      # Mount devilbox user-defined PHP-FPM *.conf files in order
      # to overwrite the default PHP-FPM configuration
      - ${DEVILBOX_PATH}/cfg/php-fpm-${PHP_SERVER}:/etc/php-fpm-custom.d:ro

      # Mount devilbox user-defined *.so files in order
      # to load custom PHP modules
      - ${DEVILBOX_PATH}/mod/php-fpm-${PHP_SERVER}:/usr/lib64/php/custom-modules:ro

      # Mount devilbox user-defined PHP-FPM startup *.sh scripts
      - ${DEVILBOX_PATH}/cfg/php-startup-${PHP_SERVER}:/startup.1.d:rw
      - ${DEVILBOX_PATH}/autostart:/startup.2.d:rw

      # Mount devilbox user-defined bash config
      - ${DEVILBOX_PATH}/bash:/etc/bashrc-devilbox.d:rw

      # Mount devilbox user-defined supervisord config
      - ${DEVILBOX_PATH}/supervisor:/etc/supervisor/custom.d:rw

      # Certificate Authority public key
      - ${DEVILBOX_PATH}/ca:/ca:rw

      # Users SSH directory (read-only)
      - ~/.ssh:/home/devilbox/.ssh:ro

    depends_on:
      - bind
  # ------------------------------------------------------------
  # Web Server
  # ------------------------------------------------------------
  httpd:
    image: devilbox/${HTTPD_SERVER}:0.36
    hostname: httpd

    environment:

      ##
      ## Debug/Logging
      ##
      - DEBUG_ENTRYPOINT=${DEBUG_COMPOSE_ENTRYPOINT}
      - DEBUG_RUNTIME=${DEBUG_COMPOSE_ENTRYPOINT}
      - DOCKER_LOGS

      ##
      ## Adjust timezone
      ##
      - TIMEZONE

      ##
      ## UserID and GroupID
      ##
      - NEW_UID
      - NEW_GID

      ##
      ## Nginx specific worker/connection settings
      ##
      - WORKER_PROCESSES=auto
      - WORKER_CONNECTIONS=1024

      ##
      ## Disable default vhost?
      ##
      - MAIN_VHOST_ENABLE=0
      - MAIN_VHOST_SSL_TYPE=${HTTPD_VHOST_SSL_TYPE:-both}
      - MAIN_VHOST_SSL_GEN=1
      - MAIN_VHOST_SSL_CN=${DEVILBOX_UI_SSL_CN:-localhost}
      - MAIN_VHOST_DOCROOT=${HTTPD_DOCROOT_DIR}
      # - MAIN_VHOST_TPL=HTTPD_TEMPLATE_DIR
      - MAIN_VHOST_STATUS_ENABLE=0
      - MAIN_VHOST_STATUS_ALIAS=

      ##
      ## Enable Mass Vhosts
      ##
      - MASS_VHOST_ENABLE=1
      - MASS_VHOST_TLD=.${TLD_SUFFIX}
      - MASS_VHOST_DOCROOT=${HTTPD_DOCROOT_DIR}
      # - MASS_VHOST_TPL=HTTPD_TEMPLATE_DIR
      - MASS_VHOST_SSL_TYPE=${HTTPD_VHOST_SSL_TYPE:-both}
      - MASS_VHOST_SSL_GEN=1

      ##
      ## PHP-FPM Remote Server
      ##
      - COMPAT=${PHP_SERVER}
      - PHP_FPM_ENABLE=1
      #still need to get this variable
      - PHP_FPM_SERVER_ADDR=devstack_php_1
      - PHP_FPM_SERVER_PORT=9000
      - PHP_FPM_TIMEOUT=${HTTPD_TIMEOUT_TO_PHP_FPM:-180}

    ports:
      # ---- Format: ----
      # [HOST-ADDR : ] HOST-PORT : DOCKER-PORT
      - "${HOST_PORT_HTTPD}:80"
      - "${HOST_PORT_HTTPD_SSL}:443"

    networks:
      app_net:
        ipv4_address: 172.16.238.11

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY
      # - devilbox_test_code:/var/www/default

      #default vhost path
      # - ${HOST_PATH_HTTPD_DEFAULT_DATADIR}:/var/www/default:ro

      # Mount custom mass virtual hosting
      # - ${HOST_PATH_HTTPD_DEFAULT_DATADIR}:/shared/httpd:rw
      - ${HOST_PATH_HTTPD_DEFAULT_DATADIR}:/shared/httpd:rw
      # - devilbox_test_code:/shared/httpd:rw

      # Mount custom web server config directory
      - ${DEVILBOX_PATH}/cfg/${HTTPD_SERVER}:/etc/httpd-custom.d:rw
      # - ${DEVILBOX_PATH}/cfg/${HTTPD_SERVER}:/etc/httpd-custom.d:rw

      # Mount custom vhost-templates
      - ${DEVILBOX_PATH}/cfg/vhost-gen:/etc/vhost-gen.d:rw

      # Mount logs
      # - ${DEVILBOX_PATH}/log/${HTTPD_SERVER}:/var/log/${HTTPD_SERVER}:rw

      # Certificate Authority public key
      - ${DEVILBOX_PATH}/ca:/ca:rw

    depends_on:
      - bind
      - php

    command: sh -c "/usr/local/bin/install.sh && exec myexecutable"

  # ------------------------------------------------------------
  # Redis
  # ------------------------------------------------------------
  redis:
    image: redis:${REDIS_SERVER}
    hostname: redis

    # Apply custom arguments to redis startup
    command: redis-server ${REDIS_ARGS:- }
    environment:
      - REDIS_ARGS=${REDIS_ARGS:- }

    ports:
      # [local-machine:]local-port:docker-port
      - "${HOST_PORT_REDIS}:6379"

    networks:
      app_net:
        ipv4_address: 172.16.238.14

    depends_on:
      - bind
      - php
      - httpd

  mailhog:
    image: mailhog/mailhog:${MAILHOG_SERVER:-latest}
    hostname: mailhog
    ports:
      - "${HOST_PORT_MAILHOG:-8025}:8025"
    networks:
      app_net:
        ipv4_address: 172.16.238.201
    depends_on:
      - bind
      - php
      - httpd
  # # -----------------------------------------------------------------------------------------------
  # # ELK Stack
  # # -----------------------------------------------------------------------------------------------
  # elastic:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_SERVER:-6.6.1}
  #   hostname: elastic
  #   ports:
  #     - "${HOST_PORT_ELK_ELASTIC:-9200}:9200"
  #   networks:
  #     app_net:
  #       ipv4_address: 172.16.238.240
  #   environment:
  #     - TZ=${TIMEZONE:-UTC}
  #     - discovery.type=single-node
  #   volumes:
  #     - devilbox-elastic:/usr/share/elasticsearch/data
  #
  # logstash:
  #   image: docker.elastic.co/logstash/logstash:${ELK_SERVER:-6.6.1}
  #   hostname: logstash
  #   ports:
  #     - "${HOST_PORT_ELK_LOGSTASH:-9600}:9600"
  #     - "${FILEBEAT_PORT_ELK_LOGSTASH:-5044}:5044"
  #   networks:
  #     app_net:
  #       ipv4_address: 172.16.238.241
  #   environment:
  #     - TZ=${TIMEZONE:-UTC}
  #     - LOG_LEVEL=info
  #     - HTTP_HOST=0.0.0.0
  #     - HTTP_PORT=9600
  #     - CONFIG_RELOAD_AUTOMATIC=true
  #     - CONFIG_RELOAD_INTERVAL=300
  #     - DB_HOST=DATABASE-SERVER
  #   volumes:
  #     - devilbox-logstash:/var/lib/logstash
  #     - ${DEVILBOX_PATH}/cfg/logstash/config:/usr/share/logstash/config
  #     - ${DEVILBOX_PATH}/cfg/logstash/pipeline:/usr/share/logstash/pipeline
  #   depends_on:
  #     - elastic
  #
  # kibana:
  #   image: docker.elastic.co/kibana/kibana:${ELK_SERVER:-6.6.1}
  #   hostname: kibana
  #   ports:
  #     - "${HOST_PORT_ELK_KIBANA:-5601}:5601"
  #   networks:
  #     app_net:
  #       ipv4_address: 172.16.238.242
  #   environment:
  #     - TZ=${TIMEZONE:-UTC}
  #     - ELASTICSEARCH_URL=http://elastic:9200
  #   volumes:
  #     - ${DEVILBOX_PATH}/cfg/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
  #   depends_on:
  #     - elastic
################################################################################
# NETWORK
################################################################################
networks:
  app_net:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24
          gateway: 172.16.238.1

################################################################################
# VOLUMES
################################################################################
volumes:
  devilbox-mariadb-10.1:
  devilbox-elastic:
  devilbox-logstash:
  # devilbox_test_code:
# secrets:
#   user_ssh_key:
#     file: ~/.ssh/id_rsa
